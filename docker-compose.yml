version: '3.3'

services:

  postgres:
    container_name: ${PROJECT_NAME}-postgres
    image: ${PROJECT_NAME}-postgres:${PROJECT_VERSION}
    restart: unless-stopped
    build:
      context: services/postgres
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    networks:
      - internal

  testing:
    container_name: ${PROJECT_NAME}-postgres-testing
    image: ${PROJECT_NAME}-postgres:development
    restart: unless-stopped
    build:
      context: services/postgres
      dockerfile: Dockerfile
    env_file:
      - services/postgres/.env.testing
    ports:
      - "5433:5432"
    networks:
      - internal

  api:
    container_name: ${PROJECT_NAME}-api
    image: ${PROJECT_NAME}-api:${PROJECT_VERSION}
    restart: unless-stopped
    build:
      context: services/api
      dockerfile: Dockerfile
    networks:
      - internal
    depends_on:
      - postgres
      - testing

  admin:
    container_name: ${PROJECT_NAME}-admin
    image: ${PROJECT_NAME}-web:${PROJECT_VERSION}
    restart: unless-stopped
    build:
      context: services/admin
      dockerfile: Dockerfile
    networks:
      - internal
    depends_on:
      - api

  webserver:
    container_name: ${PROJECT_NAME}-webserver
    image: ${PROJECT_NAME}-webserver:${PROJECT_VERSION}
    restart: unless-stopped
    build:
      context: services/webserver
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    networks:
      - internal
      - web
    depends_on:
      - api
      - admin

networks:
  internal:
  web:
    external: true