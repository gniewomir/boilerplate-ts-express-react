version: '3.3'

services:

  postgres:
    container_name: recruitment-postgres
    restart: unless-stopped
    build:
      context: services/postgres
      dockerfile: Dockerfile
    env_file:
      - services/postgres/.env
    ports:
      - "5432:5432"
    networks:
      - internal

  postgres-testing:
    container_name: recruitment-postgres-testing
    restart: unless-stopped
    build:
      context: services/postgres
      dockerfile: Dockerfile
    env_file:
      - services/postgres/.env.testing
    ports:
      - "5433:5432"
    networks:
      - internal

  api:
    container_name: recruitment-api
    restart: unless-stopped
    build:
      context: services/api
      dockerfile: Dockerfile
    env_file:
      - services/api/.env
    command: ["npm", "run", "watch"]
    volumes:
      - ./services/api/src:/app/src
      - ./services/api/tsconfig.json:/app/tsconfig.json
      - ./services/api/package.json:/app/package.json
      - ./services/api/package-lock.json:/app/package-lock.json
      - ./services/api/.env.dist:/app/.env
    networks:
      - internal
    depends_on:
      - postgres
      - postgres-testing

  web:
    container_name: recruitment-web
    restart: unless-stopped
    build:
      context: services/web
      dockerfile: Dockerfile
    networks:
      - internal
    depends_on:
      - api

  webserver:
    container_name: recruitment-webserver
    restart: unless-stopped
    build:
      context: services/webserver
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    networks:
      - internal
      - web
    depends_on:
      - web

networks:
  internal:
  web:
    external: true